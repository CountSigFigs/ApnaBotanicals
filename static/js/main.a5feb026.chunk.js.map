{"version":3,"sources":["serviceWorker.js","Components/DisplayNavbar.js","Components/RenderProducts.js","Components/DisplayCards.js","Components/DisplayPowders.js","Components/AboutUs.js","Components/ContactUs.js","Components/faqs.js","Components/ShoppingCart.js","Components/checkout.js","Components/Submission.js","Components/HeaderComponent.js","Components/HomeComponent.js","Components/DisplayFooter.js","Redux/actions.js","Components/MainComponent.js","Redux/reducer.js","shared/productDisplay.js","shared/powders.js","shared/products.js","App.js","Redux/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","DisplayNavbar","props","state","isNavOpen","toggleNav","bind","this","setState","cartLength","i","cart","length","quanity","total","displayItems","map","item","key","id","style","listStyle","className","src","image","height","alt","name","light","expand","onClick","isOpen","navbar","to","nav","inNavbar","caret","right","left","width","Component","RenderProducts","items","description","price","React","DisplayCards","scrollTo","products","DisplayPowders","powders","AboutUs","class","ContactUs","handleBlur","field","touched","email","phoneNum","feedback","handleInputChange","handleSubmit","event","target","value","type","checked","errors","test","includes","console","log","JSON","stringify","alert","validate","onSubmit","htmlFor","placeholder","invalid","onBlur","onChange","rows","NewUserGuide","RenderCartItems","totalQuanity","tax","taxes","toFixed","totalPrice","handleClick","ShoppingCart","Checkout","handleCheckboxChange","shippingFirstName","billingFirstName","shippingLastName","billingLastName","shippingAddress","billingAddress","shippingCity","billingCity","shippingState","billingState","shippingZipCode","billingZipCode","billingPhoneNum","billingEmail","paymentName","paymentNum","ccExpiration","ccCVV","reg","check","for","tag","Submission","Header","Kratom","href","rel","Products","display","link","UserFaqs","Home","Footer","Types","ADD_ITEM","DELETE_ITEM","RESET_CART","payload","Main","handleDelete","handleReset","addItem","deleteItem","resetCart","path","exact","withRouter","connect","capsules","dispatch","ACTIONS","initialState","Reducer","action","newCart","push","index","indexOf","splice","Routes","store","createStore","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0NAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wECqGSC,E,kDAtGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAW,GAEb,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBALA,E,wDASjBC,KAAKC,SAAS,CACZJ,WAAYG,KAAKJ,MAAMC,c,+BAUzB,IADA,IAAIK,EAAa,EACRC,EAAI,EAAGA,EAAIH,KAAKL,MAAMS,KAAKC,OAAQF,IAC1CD,GAAcF,KAAKL,MAAMS,KAAKD,GAAGG,QAE/BJ,EAAa,IACfA,EAAa,MAIf,IAAIK,EAAoB,GAAbL,EAGLM,EAAeR,KAAKL,MAAMS,KAAKK,KAAI,SAAAC,GACvC,OACE,wBAAIC,IAAKD,EAAKE,GAAIC,MAAO,CAACC,UAAU,QAASC,UAAU,QACrD,+BAAO,yBAAKC,IAAKN,EAAKO,MAAOJ,MAAO,CAACK,OAAO,IAAKH,UAAU,OAAOI,IAAKT,EAAKU,OAASV,EAAKU,MAAa,2BAAOL,UAAU,oBAAjB,QAA0CL,EAAKJ,aAM5J,OACE,6BACE,kBAAC,IAAD,CAAQe,OAAK,EAACC,OAAO,KAAKP,UAAU,qBAClC,kBAAC,IAAD,CAAeQ,QAASvB,KAAKF,YAC7B,kBAAC,IAAD,CAAU0B,OAAQxB,KAAKJ,MAAMC,UAAW4B,QAAM,GAC5C,kBAAC,IAAD,CAAKV,UAAU,UAAUU,QAAM,GAC7B,kBAAC,IAAD,CAAMC,GAAG,IAAIX,UAAU,QAAO,uBAAGA,UAAU,mBAAmBH,GAAG,UACjE,kBAAC,IAAD,CAAsBe,KAAG,EAACC,UAAQ,GAChC,kBAAC,IAAD,CAAgBD,KAAG,EAACE,OAAK,GAAzB,YAGA,kBAAC,IAAD,CAAcC,OAAK,GACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMJ,GAAG,cAAT,aAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,cAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,GAAG,SAASX,UAAU,YAA/B,SAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASW,GAAG,aAAaX,UAAU,YAAnC,gBAGJ,kBAAC,IAAD,KACA,kBAAC,IAAD,CAASA,UAAU,QACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBY,KAAG,EAACf,GAAG,gBACrB,uBAAGG,UAAU,wBADf,SAC+C,0BAAMA,UAAU,0BAA0Bb,IAEvF,kBAAC,IAAD,CAAc6B,KAAK,OAAOnB,GAAG,wBAC3B,yBAAKG,UAAU,aACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,wBACf,uBAAGA,UAAU,kCADb,OACqD,0BAAMA,UAAU,SAASb,GAC5E,0BAAMa,UAAU,4BAAhB,WAAoDR,IAEtD,yBAAKQ,UAAU,iBAAiBF,MAAO,CAACmB,MAAM,MAC9C,4BACGxB,IAIF,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAMkB,GAAG,gBAAgBX,UAAU,OAAnC,0B,GAxFEkB,aCmBXC,E,uKA5BF,IAAD,OACA1B,EAAcR,KAAKL,MAAMwC,MAAM1B,KAAI,SAAAC,GACzC,OACI,yBAAKC,IAAKD,EAAKE,GAAIG,UAAU,qCACzB,kBAAC,IAAD,CAAMA,UAAU,gCACZ,kBAAC,IAAD,CAASC,IAAKN,EAAKO,QACnB,kBAAC,IAAD,CAAUF,UAAU,eAChB,kBAAC,IAAD,CAAWA,UAAU,eAAc,0BAAMA,UAAU,SAASL,EAAKU,OACjE,kBAAC,IAAD,CAAUL,UAAU,eACfL,EAAK0B,YAAY,6BADtB,WAEa1B,EAAK2B,MAFlB,YAFJ,cAOI,uBAAGtB,UAAU,+BAA+BQ,QAAS,kBAAM,EAAK5B,MAAM4B,QAAQb,YAMlG,OACI,yBAAKK,UAAU,kBACX,yBAAKA,UAAU,qCACVP,Q,GAxBY8B,IAAML,WCuBpBM,E,kLArBXjD,OAAOkD,SAAS,EAAG,K,+BAInB,OACE,yBAAKzB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,0BACb,4CACA,2BAAG,wCAAa,0BAAMA,UAAU,SAAhB,QAAb,wCAGP,yBAAKA,UAAU,qCACb,kBAAC,EAAD,CAAgBoB,MAAOnC,KAAKL,MAAM8C,SAAUlB,QAASvB,KAAKL,MAAM4B,gB,GAjB/CU,aCuBZS,E,kLArBPpD,OAAOkD,SAAS,EAAG,K,+BAInB,OACI,yBAAKzB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,uBAAGA,UAAU,0BACb,2CACA,2BAAG,wCAAa,0BAAMA,UAAU,SAAhB,QAAb,wCAGX,yBAAKA,UAAU,qCACX,kBAAC,EAAD,CAAgBoB,MAAOnC,KAAKL,MAAMgD,QAASpB,QAASvB,KAAKL,MAAM4B,gB,GAjBtDU,aCiCdW,E,kLA7BPtD,OAAOkD,SAAS,EAAG,K,+BAIvB,OACI,yBAAKzB,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,uBAAG8B,MAAM,4BAGjB,yBAAK9B,UAAU,YACX,yBAAKA,UAAU,0CACX,yBAAKC,IAAI,8BAA8BG,IAAI,SAASP,GAAG,WAE3D,yBAAKG,UAAU,0BACf,wCACA,uJACgC,uCADhC,oLAIA,kBAAC,IAAD,CAAQA,UAAU,aAAaH,GAAG,iBAAgB,kBAAC,IAAD,CAAMc,GAAG,cAAT,sB,GAxB5CO,a,gBCyIPa,E,kDAzIX,WAAYnD,GAAQ,IAAD,8BACf,cAAMA,IAuDVoD,WAAa,SAACC,GAAD,OAAW,WACpB,EAAK/C,SAAS,CACVgD,QAAQ,eAAK,EAAKrD,MAAMqD,QAAjB,eAA2BD,GAAQ,QAxD9C,EAAKpD,MAAQ,CACTwB,KAAM,GACN8B,MAAO,GACPC,SAAU,GACVC,SAAU,GACVH,QAAS,CACL7B,MAAM,EACN+B,UAAU,EACVD,OAAO,IAIf,EAAKG,kBAAoB,EAAKA,kBAAkBtD,KAAvB,gBACzB,EAAKuD,aAAe,EAAKA,aAAavD,KAAlB,gBAfL,E,8DAkBDwD,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DrC,EAAOoC,EAAOpC,KAEpBpB,KAAKC,SAAL,eACKmB,EAAOqC,M,+BAIPrC,EAAM+B,EAAUD,GAErB,IAAMU,EAAS,CACXxC,KAAM,GACN+B,SAAU,GACVD,MAAO,IAGPlD,KAAKJ,MAAMqD,QAAQ7B,MACfA,EAAKf,OAAS,IACduD,EAAOxC,KAAO,uCAetB,OAVIpB,KAAKJ,MAAMqD,QAAQE,WACI,KAAnBA,EAAS9C,QAFL,QAE0BwD,KAAKV,KACrCS,EAAOT,SAAS,4CAIlBnD,KAAKJ,MAAMqD,QAAQC,QAAUA,EAAMY,SAAS,OAC5CF,EAAOV,MAAQ,4BAGZU,I,mCASEL,GACTQ,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUlE,KAAKJ,QACvDuE,MAAM,qBAAuBF,KAAKC,UAAUlE,KAAKJ,U,0CAIjDN,OAAOkD,SAAS,EAAG,K,+BAKnB,IAAMoB,EAAS5D,KAAKoE,SAASpE,KAAKJ,MAAMwB,KAAMpB,KAAKJ,MAAMuD,SAAUnD,KAAKJ,MAAMsD,OAC9E,OACI,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,uBAAGA,UAAU,0BACb,qDACA,2BAAG,kEAGX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uCACX,kBAAC,IAAD,CAAMsD,SAAUrE,KAAKsD,cACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOgB,QAAQ,OAAOvD,UAAU,cAAhC,QACA,kBAAC,IAAD,CAAO2C,KAAK,OAAO9C,GAAG,OAAOQ,KAAK,OAC1BmD,YAAY,OACZd,MAAOzD,KAAKJ,MAAMwB,KAClBoD,QAASZ,EAAOxC,KAChBqD,OAAQzE,KAAK+C,WAAW,QACxB2B,SAAU1E,KAAKqD,oBACvB,kBAAC,IAAD,KAAeO,EAAOxC,OAE1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkD,QAAQ,WAAWvD,UAAU,cAApC,SACA,kBAAC,IAAD,CAAO2C,KAAK,MAAM9C,GAAG,WAAWQ,KAAK,WAC7BmD,YAAY,eACZd,MAAOzD,KAAKJ,MAAMuD,SAClBqB,QAASZ,EAAOT,SAChBsB,OAAQzE,KAAK+C,WAAW,YACxB2B,SAAU1E,KAAKqD,oBACvB,kBAAC,IAAD,KAAeO,EAAOT,WAE1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmB,QAAQ,QAAQvD,UAAU,cAAjC,SACA,kBAAC,IAAD,CAAO2C,KAAK,QAAQ9C,GAAG,QAAQQ,KAAK,QAC5BmD,YAAY,QACZd,MAAOzD,KAAKJ,MAAMsD,MAClBsB,QAASZ,EAAOV,MAChBuB,OAAQzE,KAAK+C,WAAW,SACxB2B,SAAU1E,KAAKqD,oBACvB,kBAAC,IAAD,KAAeO,EAAOV,QAE1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOoB,QAAQ,WAAWvD,UAAU,cAApC,iBACA,kBAAC,IAAD,CAAO2C,KAAK,WAAW9C,GAAG,WAAWQ,KAAK,WAClCuD,KAAK,IACLlB,MAAOzD,KAAKJ,MAAMwD,SAClBsB,SAAU1E,KAAKqD,qBAE3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQK,KAAK,SAAS3C,UAAU,8BAAhC,iB,GA7HRkB,aCyDT2C,E,kLAtDPtF,OAAOkD,SAAS,EAAG,K,+BAIvB,OACI,yBAAKzB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,uBAAGA,UAAU,0BACb,8CACA,wBAAIA,UAAU,eACd,yBAAKC,IAAI,6BAA6BG,IAAI,UAAUP,GAAG,UAAUG,UAAU,gCAGnF,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,8CACA,6BACA,iDACA,uWAIA,qDACA,gQAGA,oDACA,kSAKR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,8CACA,6BACA,2EAAgD,wBAAIA,UAAU,SAAd,sDAAhD,2OAKR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,mDACA,6BACA,yQ,GAjDOkB,aCCrB4C,E,kLAGEvF,OAAOkD,SAAS,EAAG,K,+BAOnB,IAJO,IAAD,OAEFsC,EAAa,EAER3E,EAAE,EAAGA,EAAGH,KAAKL,MAAMS,KAAKC,OAAQF,IACrC2E,GAAe9E,KAAKL,MAAMS,KAAKD,GAAGG,QAGtC,IAAI+B,EAAsB,GAAfyC,EACPC,EAAa,KAAR1C,EACL2C,EAAOD,EAAIE,QAAQ,GACnB1E,GAAQ8B,EAAQ0C,GAAKE,QAAQ,GAE3BzE,EAAcR,KAAKL,MAAMS,KAAKK,KAAI,SAAAC,GAEpC,IAAIwE,EAAYxE,EAAKJ,QAAUI,EAAK2B,MAChC,OACI,wBAAI1B,IAAKD,EAAKE,IACN,4BAAI,yBAAKI,IAAKN,EAAKO,MAAOE,IAAI,UAAUD,OAAO,WAC/C,4BAAKR,EAAKU,MACV,4BAAKV,EAAKgD,MACV,4BAAKhD,EAAKJ,SACV,gCAAM4E,GACN,4BACK,uBAAGrC,MAAM,gCAAgCtB,QAAS,kBAAM,EAAK5B,MAAM4B,QAAQb,MAC5E,uBAAGK,UAAU,0BAA0BQ,QAAS,kBAAM,EAAK5B,MAAMwF,YAAYzE,WAKzG,OACI,yBAAKK,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAW,mBACZ,kBAAC,IAAD,KACI,+BACI,4BACI,6BACA,4CACA,4CACA,uCACA,qCACA,wCAGR,+BACKP,GAEL,+BACI,4BACI,6BACA,6BACA,6BACA,6BACA,wCACA,4BAAK6B,IAET,4BACI,6BACA,6BACA,6BACA,6BACA,qCACA,4BAAK2C,IAET,4BACI,6BACA,6BACA,6BACA,6BACA,qCACA,4BAAKzE,IAET,4BACI,6BACA,6BACA,6BACA,6BACA,6BACA,4BAAI,kBAAC,IAAD,CAAMmB,GAAG,cAAa,kBAAC,IAAD,yC,GArF5BO,aAiIfmD,E,uKA5BP,OAAIpF,KAAKL,MAAMS,KAAKC,QAAU,EAE1B,yBAAKU,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,kDACA,kBAAC,EAAD,CAAiBX,KAAMJ,KAAKL,MAAMS,KAAMmB,QAASvB,KAAKL,MAAM4B,QAAS4D,YAAanF,KAAKL,MAAMwF,iBAOzG,yBAAKpE,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,kDACA,2BAAG,+EACH,yBAAKC,IAAI,0BAA0BG,IAAI,OAAOJ,UAAU,e,GArBrDkB,aCwgBZoD,E,kDAzmBb,WAAY1F,GAAQ,IAAD,8BACjB,cAAMA,IA+CR2F,qBAAuB,WACrB,EAAKrF,SAAS,CACVsF,kBAAmB,EAAK3F,MAAM4F,iBAC9BC,iBAAkB,EAAK7F,MAAM8F,gBAC7BC,gBAAiB,EAAK/F,MAAMgG,eAC5BC,aAAc,EAAKjG,MAAMkG,YACzBC,cAAe,EAAKnG,MAAMoG,aAC1BC,gBAAiB,EAAKrG,MAAMsG,kBAvDf,EA0NnBnD,WAAa,SAACC,GAAD,OAAW,WACtB,EAAK/C,SAAS,CACZgD,QAAQ,eAAM,EAAKrD,MAAMqD,QAAlB,eAA4BD,GAAQ,QA1N7C,EAAKpD,MAAQ,CACX4F,iBAAkB,GAClBE,gBAAiB,GACjBS,gBAAiB,GACjBC,aAAc,GACdR,eAAgB,GAChBE,YAAa,GACbE,aAAc,GACdE,eAAgB,GAChBX,kBAAmB,GACnBE,iBAAkB,GAClBE,gBAAiB,GACjBE,aAAc,GACdE,cAAe,GACfE,gBAAiB,GACjBI,YAAa,GACbC,WAAY,GACZC,aAAc,GACdC,MAAO,GACPvD,QAAS,CACPuC,kBAAkB,EAClBE,iBAAiB,EACjBS,iBAAiB,EACjBC,cAAc,EACdR,gBAAgB,EAChBE,aAAa,EACbE,cAAc,EACdE,gBAAgB,EAChBX,mBAAmB,EACnBE,kBAAkB,EAClBE,iBAAiB,EACjBE,cAAc,EACdE,eAAe,EACfE,iBAAiB,EACjBI,aAAa,EACbC,YAAY,EACZC,cAAc,EACdC,OAAO,IAIX,EAAKnD,kBAAoB,EAAKA,kBAAkBtD,KAAvB,gBACzB,EAAKuD,aAAe,EAAKA,aAAavD,KAAlB,gBACpB,EAAKuF,qBAAsB,EAAKA,qBAAqBvF,KAA1B,gBA7CV,E,8DA2DDwD,GAChB,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DrC,EAAOoC,EAAOpC,KAEpBpB,KAAKC,SAAL,eACGmB,EAAOqC,M,+BAIH+B,EACPE,EACAS,EACAC,EACAR,EACAE,EACAE,EACAE,EACAX,EACAE,EACAE,EACAE,EACAE,EACAE,EACAI,EACAC,EACAC,EACAC,GAEA,IAAM5C,EAAS,CACb4B,iBAAkB,GAClBE,gBAAiB,GACjBS,gBAAiB,GACjBC,aAAc,GACdR,eAAgB,GAChBE,YAAa,GACbE,aAAc,GACdE,eAAgB,GAChBX,kBAAmB,GACnBE,iBAAkB,GAClBE,gBAAiB,GACjBE,aAAc,GACdE,cAAe,GACfE,gBAAiB,GACjBI,YAAa,GACbC,WAAY,GACZC,aAAc,GACdC,MAAO,IAGLxG,KAAKJ,MAAMqD,QAAQuC,kBACjBA,EAAiBnF,OAAS,IAC5BuD,EAAO4B,iBAAmB,iCAI1BxF,KAAKJ,MAAMqD,QAAQsC,mBACjBA,EAAkBlF,OAAS,IAC7BuD,EAAO2B,kBAAoB,iCAI3BvF,KAAKJ,MAAMqD,QAAQoD,aACjBA,EAAYhG,OAAS,IACvBuD,EAAOyC,YAAc,iCAIrBrG,KAAKJ,MAAMqD,QAAQyC,iBACjBA,EAAgBrF,OAAS,IAC3BuD,EAAO8B,gBAAkB,gCAIzB1F,KAAKJ,MAAMqD,QAAQwC,kBACjBA,EAAiBpF,OAAS,IAC5BuD,EAAO6B,iBAAmB,gCAI9B,IAAMgB,EAAM,QA4EZ,OA1EIzG,KAAKJ,MAAMqD,QAAQsD,eACO,IAAxBA,EAAalG,QAAiBoG,EAAI5C,KAAK0C,KACzC3C,EAAO2C,aAAe,iDAItBvG,KAAKJ,MAAMqD,QAAQuD,QACA,IAAjBA,EAAMnG,QAAiBoG,EAAI5C,KAAK2C,KAClC5C,EAAO4C,MAAQ,yCAIfxG,KAAKJ,MAAMqD,QAAQkD,iBAAmBA,EAAgB9F,OAAS,KAAOoG,EAAI5C,KAAKsC,KACjFvC,EAAOuC,gBAAkB,gDAGvBnG,KAAKJ,MAAMqD,QAAQiD,iBACjBA,EAAe7F,OAAS,GAAK6F,EAAe7F,OAAS,IAAMoG,EAAI5C,KAAKqC,MACtEtC,EAAOsC,eAAiB,iEAIxBlG,KAAKJ,MAAMqD,QAAQqD,aACjBA,EAAWjG,OAAS,IAAMiG,EAAWjG,OAAS,KAAOoG,EAAI5C,KAAKyC,MAChE1C,EAAO0C,WAAa,qEAIpBtG,KAAKJ,MAAMqD,QAAQgD,kBACU,IAA3BA,EAAgB5F,QAAiBoG,EAAI5C,KAAKoC,KAC5CrC,EAAOqC,gBAAkB,iEAIzBjG,KAAKJ,MAAMqD,QAAQmD,eAAiBA,EAAatC,SAAS,OAC5DF,EAAOwC,aAAe,4BAGpBpG,KAAKJ,MAAMqD,QAAQ2C,gBACjBA,EAAevF,OAAS,IAC1BuD,EAAOgC,eAAiB,gCAIxB5F,KAAKJ,MAAMqD,QAAQ0C,iBACjBA,EAAgBtF,OAAS,IAC3BuD,EAAO+B,gBAAkB,gCAIzB3F,KAAKJ,MAAMqD,QAAQ6C,aACjBA,EAAYzF,OAAS,IACvBuD,EAAOkC,YAAc,6BAIrB9F,KAAKJ,MAAMqD,QAAQ4C,cACjBA,EAAaxF,OAAS,IACxBuD,EAAOiC,aAAe,6BAItB7F,KAAKJ,MAAMqD,QAAQ+C,cACO,IAAxBA,EAAa3F,SACfuD,EAAOoC,aAAe,gEAItBhG,KAAKJ,MAAMqD,QAAQ8C,eACQ,IAAzBA,EAAc1F,SAChBuD,EAAOmC,cAAgB,gEAIpBnC,I,mCASIL,GACXY,MAAM,qBAAuBF,KAAKC,UAAUlE,KAAKJ,U,0CAIjDN,OAAOkD,SAAS,EAAG,K,+BA0BnB,IArBA,IAAMoB,EAAS5D,KAAKoE,SAASpE,KAAKJ,MAAM4F,iBACtCxF,KAAKJ,MAAM8F,gBACX1F,KAAKJ,MAAMuG,gBACXnG,KAAKJ,MAAMwG,aACXpG,KAAKJ,MAAMgG,eACX5F,KAAKJ,MAAMkG,YACX9F,KAAKJ,MAAMoG,aACXhG,KAAKJ,MAAMsG,eACXlG,KAAKJ,MAAM2F,kBACXvF,KAAKJ,MAAM6F,iBACXzF,KAAKJ,MAAM+F,gBACX3F,KAAKJ,MAAMiG,aACX7F,KAAKJ,MAAMmG,cACX/F,KAAKJ,MAAMqG,gBACXjG,KAAKJ,MAAMyG,YACXrG,KAAKJ,MAAM0G,WACXtG,KAAKJ,MAAM2G,aACXvG,KAAKJ,MAAM4G,OAGTnE,EAAQ,EACHlC,EAAE,EAAGA,EAAEH,KAAKL,MAAMS,KAAKC,OAAQF,IACtCkC,GAASrC,KAAKL,MAAMS,KAAKD,GAAGG,QAG9B,IAAIyE,EAAc,MADlB1C,GAAgB,IAEZ2C,EAAQD,EAAIE,QAAQ,GACpB1E,GAAS8B,EAAQ0C,GAAKE,QAAQ,GAE5BzE,EAAeR,KAAKL,MAAMS,KAAKK,KAAI,SAAAC,GACvC,OACE,wBAAIC,IAAKD,EAAKE,GAAIG,UAAU,kDAC1B,yBAAKA,UAAU,QACb,4BAAKL,EAAKU,MACV,2BAAOL,UAAU,SAASL,EAAKgD,KAA/B,SAA2ChD,EAAKJ,UAElD,0BAAMS,UAAU,SAAhB,IAAyC,GAAfL,EAAKJ,aAKrC,OACE,yBAAKS,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,0BACb,2DAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMsD,SAAUrE,KAAKsD,cACnB,kBAAC,IAAD,CAAWvC,UAAU,OACnB,yBAAKA,UAAU,cACb,gDAEF,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAOuD,QAAQ,oBAAf,cACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,mBACHQ,KAAK,mBACLmD,YAAY,aACZd,MAAOzD,KAAKJ,MAAM4F,iBAClBhB,QAASZ,EAAO4B,iBAChBf,OAAQzE,KAAK+C,WAAW,oBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAO4B,mBAExB,yBAAKzE,UAAU,OACb,kBAAC,IAAD,CAAOuD,QAAQ,mBAAf,aACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,kBACHQ,KAAK,kBACLmD,YAAY,YACZd,MAAOzD,KAAKJ,MAAM8F,gBAClBlB,QAASZ,EAAO8B,gBAChBjB,OAAQzE,KAAK+C,WAAW,mBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAO8B,mBAG1B,kBAAC,IAAD,CAAW3E,UAAU,OACnB,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAOuD,QAAQ,gBAAf,SACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,eACHQ,KAAK,eACLmD,YAAY,QACZd,MAAOzD,KAAKJ,MAAMwG,aAClB5B,QAASZ,EAAOwC,aAChB3B,OAAQzE,KAAK+C,WAAW,gBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOwC,eAExB,yBAAKrF,UAAU,OACb,kBAAC,IAAD,CAAOuD,QAAQ,mBAAf,gBACA,kBAAC,IAAD,CACEZ,KAAK,MACL9C,GAAG,kBACHQ,KAAK,kBACLmD,YAAY,eACZd,MAAOzD,KAAKJ,MAAMuG,gBAClB3B,QAASZ,EAAOuC,gBAChB1B,OAAQzE,KAAK+C,WAAW,mBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOuC,mBAG1B,kBAAC,IAAD,CAAWpF,UAAU,OACnB,yBAAKA,UAAU,UACb,kBAAC,IAAD,CAAOuD,QAAQ,kBAAf,WACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,iBACHQ,KAAK,iBACLmD,YAAY,iBACZd,MAAOzD,KAAKJ,MAAMgG,eAClBpB,QAASZ,EAAOgC,eAChBnB,OAAQzE,KAAK+C,WAAW,kBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOgC,kBAG1B,kBAAC,IAAD,CAAW7E,UAAU,OACnB,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAOuD,QAAQ,eAAf,QACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,cACHQ,KAAK,cACLmD,YAAY,OACZd,MAAOzD,KAAKJ,MAAMkG,YAClBtB,QAASZ,EAAOkC,YAChBrB,OAAQzE,KAAK+C,WAAW,eACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOkC,cAExB,yBAAK/E,UAAU,OACb,kBAAC,IAAD,CAAOuD,QAAQ,gBAAf,SACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,eACHQ,KAAK,eACLmD,YAAY,QACZd,MAAOzD,KAAKJ,MAAMoG,aAClBxB,QAASZ,EAAOoC,aAChBvB,OAAQzE,KAAK+C,WAAW,gBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOoC,eAExB,yBAAKjF,UAAU,OACb,kBAAC,IAAD,CAAOuD,QAAQ,kBAAf,YACA,kBAAC,IAAD,CACEZ,KAAK,MACL9C,GAAG,iBACHQ,KAAK,iBACLmD,YAAY,WACZd,MAAOzD,KAAKJ,MAAMsG,eAClB1B,QAASZ,EAAOsC,eAChBzB,OAAQzE,KAAK+C,WAAW,kBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOsC,kBAG1B,6BACA,wBAAInF,UAAU,QAAd,oBACA,kBAAC,IAAD,CAAW2F,OAAK,GACd,kBAAC,IAAD,CACEhD,KAAK,WACLD,MAAM,wBACN7C,GAAG,wBACH8D,SAAU1E,KAAKsF,uBAEjB,kBAAC,IAAD,CAAOoB,OAAK,EAACC,IAAI,yBAAjB,sCAEF,kBAAC,IAAD,CAAW5F,UAAU,YACnB,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAOuD,QAAQ,qBAAf,cACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,oBACHQ,KAAK,oBACLmD,YAAY,aACZd,MAAOzD,KAAKJ,MAAM2F,kBAClBf,QAASZ,EAAO2B,kBAChBd,OAAQzE,KAAK+C,WAAW,qBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAO2B,oBAExB,yBAAKxE,UAAU,OACb,kBAAC,IAAD,CAAOuD,QAAQ,mBAAf,aACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,mBACHQ,KAAK,mBACLmD,YAAY,YACZd,MAAOzD,KAAKJ,MAAM6F,iBAClBjB,QAASZ,EAAO6B,iBAChBhB,OAAQzE,KAAK+C,WAAW,oBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAO6B,oBAG1B,kBAAC,IAAD,CAAW1E,UAAU,OACnB,yBAAKA,UAAU,UACb,kBAAC,IAAD,CAAOuD,QAAQ,mBAAf,WACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,kBACHQ,KAAK,kBACLmD,YAAY,iBACZd,MAAOzD,KAAKJ,MAAM+F,gBAClBnB,QAASZ,EAAO+B,gBAChBlB,OAAQzE,KAAK+C,WAAW,mBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAO+B,mBAG1B,kBAAC,IAAD,CAAW5E,UAAU,OACnB,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAOuD,QAAQ,gBAAf,QACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,eACHQ,KAAK,eACLmD,YAAY,OACZd,MAAOzD,KAAKJ,MAAMiG,aAClBrB,QAASZ,EAAOiC,aAChBpB,OAAQzE,KAAK+C,WAAW,gBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOiC,eAExB,yBAAK9E,UAAU,OACb,kBAAC,IAAD,CAAOuD,QAAQ,iBAAf,SACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,gBACHQ,KAAK,gBACLmD,YAAY,QACZd,MAAOzD,KAAKJ,MAAMmG,cAClBvB,QAASZ,EAAOmC,cAChBtB,OAAQzE,KAAK+C,WAAW,iBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOmC,gBAExB,yBAAKhF,UAAU,OACb,kBAAC,IAAD,CAAOuD,QAAQ,mBAAf,YACA,kBAAC,IAAD,CACEZ,KAAK,MACL9C,GAAG,kBACHQ,KAAK,kBACLmD,YAAY,WACZd,MAAOzD,KAAKJ,MAAMqG,gBAClBzB,QAASZ,EAAOqC,gBAChBxB,OAAQzE,KAAK+C,WAAW,mBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAOqC,mBAG1B,6BACA,kBAAC,IAAD,CAAWW,IAAI,YACb,gCAAQ,+CACR,kBAAC,IAAD,CAAWF,OAAK,GACd,kBAAC,IAAD,CAAOA,OAAK,GACV,kBAAC,IAAD,CAAOhD,KAAK,QAAQtC,KAAK,SAASqC,MAAM,WAAY,IADtD,iBAIF,kBAAC,IAAD,CAAWiD,OAAK,GACd,kBAAC,IAAD,CAAOA,OAAK,GACV,kBAAC,IAAD,CAAOhD,KAAK,QAAQtC,KAAK,SAASqC,MAAM,UAAW,IADrD,iBAKJ,kBAAC,IAAD,CAAW1C,UAAU,YACnB,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAOuD,QAAQ,eAAf,gBACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,cACHQ,KAAK,cACLqC,MAAOzD,KAAKJ,MAAMyG,YAClB7B,QAASZ,EAAOyC,YAChB5B,OAAQzE,KAAK+C,WAAW,eACxB2B,SAAU1E,KAAKqD,oBAEjB,2BAAOR,MAAM,cAAb,kCACA,kBAAC,IAAD,KAAee,EAAOyC,cAExB,yBAAKtF,UAAU,mBACb,kBAAC,IAAD,CAAOuD,QAAQ,cAAf,eACA,kBAAC,IAAD,CACEZ,KAAK,MACL9C,GAAG,aACHQ,KAAK,aACLqC,MAAOzD,KAAKJ,MAAM0G,WAClB9B,QAASZ,EAAO0C,WAChB7B,OAAQzE,KAAK+C,WAAW,cACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAO0C,cAG1B,kBAAC,IAAD,CAAWvF,UAAU,OACnB,yBAAK8B,MAAM,YACT,kBAAC,IAAD,CAAOyB,QAAQ,gBAAf,cACA,kBAAC,IAAD,CACEZ,KAAK,OACL9C,GAAG,eACHQ,KAAK,eACLqC,MAAOzD,KAAKJ,MAAM2G,aAClB/B,QAASZ,EAAO2C,aAChB9B,OAAQzE,KAAK+C,WAAW,gBACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAO2C,eAExB,yBAAK1D,MAAM,iBACT,kBAAC,IAAD,CAAOyB,QAAQ,QAAf,OACA,kBAAC,IAAD,CACEZ,KAAK,OACLb,MAAM,eACNjC,GAAG,QACHQ,KAAK,QACLqC,MAAOzD,KAAKJ,MAAM4G,MAClBhC,QAASZ,EAAO4C,MAChB/B,OAAQzE,KAAK+C,WAAW,SACxB2B,SAAU1E,KAAKqD,oBAEjB,kBAAC,IAAD,KAAeO,EAAO4C,SAG1B,kBAAC,IAAD,CAAM9E,GAAG,gBAAe,kBAAC,IAAD,CAAQX,UAAU,kBAAkB2C,KAAK,SAASnC,QAASvB,KAAKL,MAAM4B,SAAtE,mBAG5B,yBAAKR,UAAU,OACb,0CACA,wBAAIA,UAAU,mBACXP,EACD,wBAAIO,UAAU,qDACZ,yBAAKA,UAAU,QACb,sCAEF,kCAAQsB,IAEV,wBAAItB,UAAU,qDACZ,yBAAKA,UAAU,QACb,sCAEF,kCAAQiE,IAEV,wBAAIjE,UAAU,qDACZ,yBAAKA,UAAU,QACb,sCAEF,kCAAQR,Y,GA9lBD0B,aCeR4E,MAhBf,WACI,OACI,yBAAK9F,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,yCACA,2BAAG,6DACH,oIAEA,yBAAKC,IAAI,+BAA+BD,UAAU,YAAYI,IAAI,eCOvE2F,MAjBf,WACI,OACA,4BAAQ/F,UAAU,SACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACV,yBAAKC,IAAI,+BAA+BG,IAAI,YAAYP,GAAG,SAC3D,wBAAIG,UAAU,gBAAe,sDAC7B,uBAAGA,UAAU,+BCLjC,SAASgG,IACL,OACI,yBAAKhG,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+BACX,yBAAKC,IAAI,6BAA6BD,UAAU,iBAAiBI,IAAI,YAEzE,yBAAKJ,UAAU,wBACX,wBAAIH,GAAG,UAAP,UACA,8PACwF,0BAAMG,UAAU,SAAhB,mBADxF,2EAGA,uBAAGiG,KAAK,+DAA+DxD,OAAO,SAASyD,IAAI,uBAAsB,kBAAC,IAAD,CAAQlG,UAAU,0BAAlB,kBAOrI,SAASmG,EAAUvH,GACf,IAAMa,EAAcb,EAAMwH,QAAQ1G,KAAI,SAAAC,GAClC,OACI,yBAAKC,IAAKD,EAAKE,GAAIG,UAAU,+BACzB,wBAAIA,UAAU,eAAeL,EAAKgD,MAClC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS1C,IAAKN,EAAKO,MAAOC,OAAO,QAAQH,UAAU,UACnD,0BAAMA,UAAU,UACZ,kBAAC,IAAD,CAAWA,UAAU,eAAc,kBAAC,IAAD,CAAMW,GAAIhB,EAAK0G,MAAM,kBAAC,IAAD,CAAQrG,UAAU,cAAlB,QAAqCL,EAAKgD,KAA1C,aAM5E,OACI,yBAAK3C,UAAU,kBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,wBACX,8CAGR,yBAAKA,UAAU,8BACVP,IAMjB,SAAS6G,IACL,OACI,yBAAKtG,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6BACX,yBAAKC,IAAI,mCAAmCD,UAAU,YAAYF,MAAO,CAACK,OAAO,SAAUC,IAAI,kBAEnG,yBAAKJ,UAAU,cACX,8CACA,0RAIA,kBAAC,IAAD,CAAMW,GAAG,WAAU,kBAAC,IAAD,CAAQX,UAAU,0BAAlB,iBAG3B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yCACA,sNAEA,kBAAC,IAAD,CAAMW,GAAG,eAAc,kBAAC,IAAD,CAAQX,UAAU,0BAAlB,kB,IAyB5BuG,E,kLAfPhI,OAAOkD,SAAS,EAAG,K,+BAIvB,OACI,6BACI,kBAAC,EAAD,MACA,kBAACuE,EAAD,MACA,kBAACG,EAAD,CAAUC,QAASnH,KAAKL,MAAMwH,UAC9B,kBAACE,EAAD,W,GAZOpF,aCrBJsF,MAvDf,SAAgB5H,GACZ,OACI,yBAAKoB,UAAU,0BACX,yBAAKA,UAAU,2DACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,mCACV,kBAAC,IAAD,CAAMW,GAAG,SAAT,UAGR,yBAAKX,UAAU,iBACX,wBAAIA,UAAU,mCACV,kBAAC,IAAD,CAAMW,GAAG,UAAT,cAGR,yBAAKX,UAAU,iBACX,wBAAIA,UAAU,mCACV,kBAAC,IAAD,CAAMW,GAAG,UAAT,UAGR,yBAAKX,UAAU,iBACX,wBAAIA,UAAU,mCACV,kBAAC,IAAD,CAAMW,GAAG,cAAT,cAIhB,wBAAIX,UAAU,qBACd,yBAAKA,UAAU,8DACX,yBAAKA,UAAU,mBACX,uBAAGA,UAAU,QAAb,wCAEJ,yBAAKA,UAAU,wBACX,uBAAGiG,KAAK,uBAAsB,uBAAGjG,UAAU,gBAA3C,mBAGJ,yBAAKA,UAAU,wBACX,uBAAGiG,KAAK,mCAAkC,uBAAGjG,UAAU,qBAAvD,8BAIP,wBAAIA,UAAU,wCACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yBACT,yBAAKA,UAAU,oBACX,uBAAGiG,KAAK,gBAAe,uBAAGjG,UAAU,0CAAb,MACvB,uBAAGiG,KAAK,eAAc,uBAAGjG,UAAU,uCAAb,MACrB,uBAAGiG,KAAK,iBAAgB,uBAAGjG,UAAU,yCAAb,MACxB,uBAAGiG,KAAK,eAAc,uBAAGjG,UAAU,wB,gBClDlDyG,EAAQ,CACVC,SAAU,WACVC,YAAa,cACbC,WAAY,cAiBD,EAdC,SAAAjH,GAAI,MAAK,CACrBgD,KAAM8D,EAAMC,SACZG,QAASlH,IAYE,EATG,SAAAA,GAAI,MAAK,CACvBgD,KAAM8D,EAAME,YACZE,QAASlH,IAOE,EAJE,iBAAO,CACpBgD,KAAM8D,EAAMG,aAGD,EAAiCH,ECW1CK,E,kDACF,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IAEDwF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAK+H,aAAe,EAAKA,aAAa/H,KAAlB,gBACpB,EAAKgI,YAAc,EAAKA,YAAYhI,KAAjB,gBALJ,E,wDAQPW,GACRV,KAAKL,MAAMqI,QAAQtH,K,mCAGVA,GACTV,KAAKL,MAAMsI,WAAWvH,K,oCAItBV,KAAKL,MAAMuI,c,+BAIX,OACI,6BACI,kBAAC,EAAD,CAAe9H,KAAMJ,KAAKL,MAAMS,OAChC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+H,KAAK,SACR,kBAAC,EAAD,CAAMhB,QAASnH,KAAKL,MAAMwH,WAE9B,kBAAC,IAAD,CAAOiB,OAAK,EAACD,KAAK,cACd,kBAAC,EAAD,CAAc1F,SAAUzC,KAAKL,MAAM8C,SAAUlB,QAASvB,KAAKmF,eAE/D,kBAAC,IAAD,CAAOiD,OAAK,EAACD,KAAK,YACd,kBAAC,EAAD,CAAgBxF,QAAS3C,KAAKL,MAAMgD,QAASpB,QAASvB,KAAKmF,eAE/D,kBAAC,IAAD,CAAOiD,OAAK,EAACD,KAAK,UACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,UACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,cACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,iBACd,kBAAC,EAAD,CACI/H,KAAMJ,KAAKL,MAAMS,KACjBmB,QAASvB,KAAK8H,aACd3C,YAAanF,KAAKmF,eAG1B,kBAAC,IAAD,CAAOiD,OAAK,EAACD,KAAK,aACd,kBAAC,EAAD,CAAU/H,KAAMJ,KAAKL,MAAMS,KAAMmB,QAASvB,KAAK+H,eAEnD,kBAAC,IAAD,CAAOK,OAAK,EAACD,KAAK,eACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAUzG,GAAG,WAEjB,kBAAC,EAAD,W,GA3DGO,aAiEJoG,cAAWC,aAhFH,SAAA1I,GACnB,MAAO,CACHuH,QAASvH,EAAMuH,QACfxE,QAAS/C,EAAM+C,QACfF,SAAU7C,EAAM2I,SAChBnI,KAAMR,EAAMQ,SAIM,SAAAoI,GAAQ,MAAK,CACnCR,QAAS,SAAAtH,GAAI,OAAI8H,EAASC,EAAgB/H,KAC1CuH,WAAY,SAAAvH,GAAI,OAAI8H,EAASC,EAAmB/H,KAChDwH,UAAW,kBAAMM,EAASC,SAoEJH,CAA6CT,I,gBC3F1Da,EAAe,CACxBvB,QCNiB,CACjB,CACIvG,GAAG,EACH8C,KAAM,WACNzC,MAAO,4BACPmG,KAAM,cAEV,CACIxG,GAAI,EACJ8C,KAAM,UACNzC,MAAO,4BACPmG,KAAM,aDJVzE,QEPkB,CAClB,CACI/B,GAAI,EACJQ,KAAM,cACNsC,KAAM,SACNzC,MAAO,2BACPmB,YAAa,uBACbC,MAAO,GACP/B,QAAQ,GAEZ,CACIM,GAAI,EACJQ,KAAM,eACNsC,KAAM,SACNzC,MAAO,4BACPmB,YAAa,0BACbC,MAAO,GACP/B,QAAQ,GAEZ,CACIM,GAAI,EACJQ,KAAM,aACNsC,KAAM,SACNzC,MAAO,0BACPmB,YAAa,mBACbC,MAAO,GACP/B,QAAQ,GAEZ,CACIM,GAAI,EACJQ,KAAM,eACNsC,KAAM,SACNzC,MAAO,4BACPmB,YAAa,sBACbC,MAAO,GACP/B,QAAQ,GAEZ,CACIM,GAAI,EACJQ,KAAM,gBACNsC,KAAM,SACNzC,MAAO,6BACPmB,YAAa,kBACbC,MAAO,GACP/B,QAAQ,IFpCZiI,SGRmB,CACnB,CACI3H,GAAI,EACJQ,KAAM,cACNsC,KAAM,UACNzC,MAAO,2BACPmB,YAAa,uBACbC,MAAO,GACP/B,QAAQ,GAEZ,CACIM,GAAI,EACJQ,KAAM,eACNsC,KAAM,UACNzC,MAAO,4BACPmB,YAAa,0BACbC,MAAO,GACP/B,QAAQ,GAEZ,CACIM,GAAI,EACJQ,KAAM,aACNsC,KAAM,UACNzC,MAAO,0BACPmB,YAAa,mBACbC,MAAO,GACP/B,QAAQ,GAEZ,CACIM,GAAI,EACJQ,KAAM,eACNsC,KAAM,UACNzC,MAAO,0BACPmB,YAAa,sBACbC,MAAO,GACP/B,QAAQ,GAEZ,CACIM,GAAI,EACJQ,KAAM,gBACNsC,KAAM,UACNzC,MAAO,0BACPmB,YAAa,kBACbC,MAAO,GACP/B,QAAQ,IHnCZF,KAAM,IAGGuI,EAAU,WAAkC,IAAjC/I,EAAgC,uDAAzB8I,EAAcE,EAAW,uCAEpD,OAAOA,EAAOlF,MAEV,KAAK+E,EAAchB,SAEf,IAAI/G,EAAMkI,EAAOhB,QAEjB,GAAIhI,EAAMQ,KAAK0D,SAASpD,GAGpB,OADAA,EAAKJ,SAAS,EACd,eACOV,EADP,CAEIQ,KAAK,YAAIR,EAAMQ,QAIvB,IAAIyI,EAAO,YAAOjJ,EAAMQ,MAGxB,OAFAM,EAAKC,IAAMkI,EAAQxI,OACnBwI,EAAQC,KAAKpI,GACN,eACAd,EADP,CAEIQ,KAAKyI,IAKb,KAAKJ,EAAcf,YAEf,IAAIhH,EAAOkI,EAAOhB,QAElB,GAAIlH,EAAKJ,QAAU,EAEf,OADAI,EAAKJ,SAAS,EACP,eACAV,EADP,CAEIQ,KAAK,YAAKR,EAAMQ,QAGpB,IAAIyI,EAAO,YAAOjJ,EAAMQ,MACpB2I,EAAQF,EAAQG,QAAQtI,GAG5B,OAFAmI,EAAQI,OAAOF,EAAO,GAEf,eACAnJ,EADP,CAEIQ,KAAKyI,IAIjB,KAAKJ,EAAcd,WACf,IAAIkB,EAAU,GACd,OAAO,eACAjJ,EADP,CAEIQ,KAAMyI,IAGd,QAAS,OAAOjJ,II5DT,SAASsJ,IACtB,IAAMC,ECJUC,YACVT,EACAD,GDGJ,OACE,kBAAC,IAAD,CAAUS,MAAOA,GACf,kBAAC,IAAD,CAAeE,SAAUC,mBACvB,yBAAK1I,GAAG,QACN,kBAAC,EAAD,SEJZ2I,IAASC,OAAO,kBAACN,EAAD,MAAYO,SAASC,eAAe,StB0H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnG,QAAQmG,MAAMA,EAAMC,c","file":"static/js/main.a5feb026.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport { Link, NavLink } from 'react-router-dom'\n\n\n\nclass DisplayNavbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isNavOpen: false,\n    }\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    })\n  }\n\n  \n\n  render() {\n\n    //updates the cart length\n    let cartLength = 0\n    for (let i = 0; i < this.props.cart.length; i++) {\n      cartLength += this.props.cart[i].quanity\n    }\n    if (cartLength < 1) {\n      cartLength = null;\n    }\n\n    //total amount\n    let total= cartLength * 10;\n\n    //displays items in dropdown cart\n    const displayItems = this.props.cart.map(item => {\n      return (\n        <li key={item.id} style={{listStyle:'none'}} className='my-2'>\n          <small><img src={item.image} style={{height:50}} className='mr-2' alt={item.name} />{item.name}</small><small className='float-right mt-3'>Qty: {item.quanity}</small>\n        </li>\n      )\n    })\n\n\n    return (\n      <div>\n        <Navbar light expand=\"md\" className='navigationDisplay'>\n          <NavbarToggler onClick={this.toggleNav} />\n          <Collapse isOpen={this.state.isNavOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <Link to='/' className=\"mt-2\"><i className=\"fa fa-home fa-lg\" id='home' /></Link>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Products\n              </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    <Link to='/directory'>Capsules</Link>\n                  </DropdownItem>\n                  <DropdownItem>\n                    <Link to='/powders'>Powders</Link>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <NavItem>\n                <NavLink to='/guide' className=\"nav-link\">FAQs</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to='/contactus' className=\"nav-link\">Contact Us</NavLink>\n              </NavItem>\n            </Nav>\n            <Nav>\n            <NavItem className='mr-4'>\n            <UncontrolledDropdown>\n              <DropdownToggle nav id='dropDownMenu'>\n                <i className=\"fa fa-shopping-cart\"></i> Cart <span className=\"badge badge-light ml-1\">{cartLength}</span>\n              </DropdownToggle>\n                <DropdownMenu left='true' id=\"shoppingCartDropDown\">\n                  <div className='container'>\n                    <div className='row shoppingCart'>\n                      <div className='shopping-cart-header'>\n                      <i className=\"fa fa-shopping-cart cart-icon\"></i>Cart<span className=\"badge\">{cartLength}</span>\n                        <span className=\"lighter-text float-right\">Total: ${total}</span>\n                      </div>\n                      <div className='shopping-items' style={{width:300}}>\n                      <ul>\n                        {displayItems}\n                      </ul>\n            \n                      </div>\n                       <DropdownItem>\n                          <Link to='/shoppingcart' className='btn'>Checkout</Link>\n                      </DropdownItem> \n                    </div>\n                  </div>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default DisplayNavbar;\n\n\n\n\n","import React from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle} from 'reactstrap'\n\n\n\nclass RenderProducts extends React.Component{\n   \n    render () {\n        const displayItems= this.props.items.map(item =>{\n        return (\n            <div key={item.id} className=\"col-9 col-md-6 col-lg-4 mb-3 mt-3\">\n                <Card className=\"productDisplay col-9 mx-auto\">\n                    <CardImg src={item.image} />\n                    <CardBody className=\"text-center\">\n                        <CardTitle className=\"text-center\"><span className=\"green\">{item.name}</span></CardTitle>\n                        <CardText className=\"text-center\">\n                            {item.description}<br />\n                            Price: ${item.price} per oz.                    \n                        </CardText>\n                        Add to Cart\n                        <i className=\"fa fa-plus-circle fa-2x ml-2\" onClick={() => this.props.onClick(item)}></i>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    })\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row d-flex justify-content-around\">\n                {displayItems}\n            </div>\n        </div>\n    )\n  }\n}\n  export default RenderProducts;\n","import React, { Component } from 'react';\nimport RenderProducts from './RenderProducts'\n\n\nclass DisplayCards extends Component {\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col text-center mt-3\">\n            <i className=\"fa fa-leaf fa-4x mt-2\"></i>\n            <h2>Our Capsules</h2>\n            <p><em>We offer <span className=\"green\">free</span> shipping on all of our products!</em></p>\n          </div>\n        </div>\n        <div className=\"row d-flex justify-content-around\">\n          <RenderProducts items={this.props.products} onClick={this.props.onClick} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DisplayCards;","import React, { Component } from 'react';\nimport RenderProducts from './RenderProducts'\n\nclass DisplayPowders extends Component {\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col text-center mt-3\">\n                        <i className=\"fa fa-leaf fa-4x mt-2\"></i>\n                        <h2>Our Powders</h2>\n                        <p><em>We offer <span className=\"green\">free</span> shipping on all of our products!</em></p>\n                    </div>\n                </div>\n                <div className=\"row d-flex justify-content-around\">\n                    <RenderProducts items={this.props.powders} onClick={this.props.onClick} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DisplayPowders;\n","import React, {Component} from 'react';\nimport { Button } from 'reactstrap'\nimport {Link} from 'react-router-dom'\n\nclass AboutUs extends Component {\n    \n    componentDidMount() {\n        window.scrollTo(0, 0);\n      }\n      \n    render (){\n    return (\n        <div className=\"container mb-3\">\n            <div className=\"row\">\n                <div className=\"col text-center mt-3\">\n                    <i class=\"fa fa-leaf fa-4x mt-1\"></i>\n                </div>\n            </div>\n            <div className='row my-2'>\n                <div className=\"col-8 col-md-6 text-center m-2 mx-auto\">\n                    <img src='/assets/images/business.jpg' alt='owners' id=\"owner\" />\n                </div>\n                <div className=\"col-9 col-md-5 mx-auto\">\n                <h2>About Us</h2>\n                <p> Apna Botanicals is dedicated to bringing a consistent quality product to our consumers. \n                Quality and satisfaction is our <strong> #1</strong> priority. We are a family owned and operated \n                business in Springfield, Oregon and look forward to serving you. Want to hear from us? Click the \n                button below to send us a message</p>\n                <Button className=\"btn btn-lg\" id=\"contactButton\"><Link to='/contactus'>Contact Us</Link></Button>\n                </div>\n            </div>\n        </div>\n    )\n    }\n}\n\nexport default AboutUs;\n","import React, { Component } from 'react';\nimport { Form, FormGroup, Input, Label, Button, FormFeedback} from 'reactstrap'\n\nclass ContactUs extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            email: '',\n            phoneNum: '',\n            feedback: '',\n            touched: {\n                name: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    validate(name, phoneNum, email) {\n\n        const errors = {\n            name: '',\n            phoneNum: '',\n            email: ''\n        };\n\n        if (this.state.touched.name) {\n            if (name.length < 2) {\n                errors.name = 'Name must be at least 2 characters.';\n            } \n        }\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.phoneNum){\n            if (phoneNum.length !==10 || !reg.test(phoneNum)){\n              errors.phoneNum='Phone number should be ten digits long.'\n            } \n          }\n\n        if (this.state.touched.email && !email.includes('@')) {\n            errors.email = 'Email should contain a @';\n        }\n\n        return errors;\n    }\n\n    handleBlur = (field) => () => {\n        this.setState({\n            touched: {...this.state.touched, [field]: true}\n        });\n    }\n\n    handleSubmit(event) {\n        console.log('Current state is: ' + JSON.stringify(this.state));\n        alert('Current state is: ' + JSON.stringify(this.state));\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n      }\n      \n    render() {\n \n        const errors = this.validate(this.state.name, this.state.phoneNum, this.state.email); \n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col text-center mt-3\">\n                        <i className=\"fa fa-leaf fa-4x mt-1\"></i>\n                        <h2>Send Us Your Feedback</h2>\n                        <p><em>We would love to hear from you!</em></p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-10 col-md-6 mx-auto text-center\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <Label htmlFor=\"name\" className=\"float-left\">Name</Label>\n                                <Input type=\"text\" id=\"name\" name=\"name\"\n                                        placeholder=\"Name\"\n                                        value={this.state.name}\n                                        invalid={errors.name}\n                                        onBlur={this.handleBlur(\"name\")}\n                                        onChange={this.handleInputChange} />\n                                <FormFeedback>{errors.name}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"phoneNum\" className=\"float-left\">Phone</Label>\n                                <Input type=\"tel\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        value={this.state.phoneNum}\n                                        invalid={errors.phoneNum}\n                                        onBlur={this.handleBlur(\"phoneNum\")}\n                                        onChange={this.handleInputChange}  />\n                                <FormFeedback>{errors.phoneNum}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"email\" className=\"float-left\">Email</Label>\n                                <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        invalid={errors.email}\n                                        onBlur={this.handleBlur(\"email\")}\n                                        onChange={this.handleInputChange} />\n                                <FormFeedback>{errors.email}</FormFeedback>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"feedback\" className=\"float-left\">Your Feedback</Label>\n                                <Input type=\"textarea\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"6\"\n                                        value={this.state.feedback}\n                                        onChange={this.handleInputChange}></Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Button type=\"submit\" className=\"btn btn-lg float-left mb-3\">\n                                        Send\n                                </Button>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default ContactUs;","import React, {Component} from 'react';\n\n\nclass NewUserGuide extends Component {\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n      }\n      \n    render (){\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <i className=\"fa fa-leaf fa-4x mt-2\"></i>\n                    <h2>New User Guide</h2>\n                    <hr className=\"underscore\" />\n                    <img src='/assets/images/closeup.jpg' alt='closeup' id=\"closeUp\" className=\"d-none d-sm-block mx-auto\" />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col mt-2\">\n                    <h3>Tips for Users</h3>\n                    <hr />\n                    <h5>Tip #1: Start Low</h5>\n                    <p>When you first start with kratom, start with the lowest dosage. Trying something new for the \n                    first time can cause a lot of anixety, especially if you do not konw how your body will react. \n                    For your first few times, start with half a dose. Build up to a full dose over a week. This will \n                    provide you with a better user experience. </p>\n                    <h5>Tip #2: Less is More </h5>\n                    <p>When taking kratom, the effects are similiar to that of a bell curve. This means that when you \n                    take too low or too much of a dose, the effects are minimal. When you take a mid amount of Kratom, \n                    the effecst are at it's highest</p>\n                    <h5>Tip #3: Change it Up</h5>\n                    <p>Don't just stick with one strain! Kratom tolerance is built up by using just one strand and there \n                    are tons of strands out there! We offer five strains, each offering a different user experience. \n                    Experitment with different ones to sew what works best for you</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col mt-2\">\n                    <h3>Storing Kratom</h3>\n                    <hr />\n                    <p>The best way to store kratom is to practice: <em className=\"green\">Keep it Cool, Avoid Sunlight, and Avoid Oxidation.</em>\n                    Kratom is senstive to the natural world and over time it can reduce its potency which is why we recommend the three things above.\n                    When storing kratom, its best kept in a tightly wraped bag in a cupward away from sunlight and heat</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col mt-2\">\n                    <h3>Kratom Serving Tips</h3>\n                    <hr />\n                    <p>There are countless ways to use kratom. To just to name a few: making a tea, adding to yogurt, taking as a capsule, \n                    and making a milkshake. Whichever way you decide to take kratom, start with a small does and work your way up. </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n}\nexport default NewUserGuide;\n","import React, { Component } from 'react';\nimport { Table, Button } from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\nclass RenderCartItems extends Component{\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n      }\n      \n    render () {\n\n        let totalQuanity=0\n\n        for (let i=0; i< this.props.cart.length; i++){\n            totalQuanity+= this.props.cart[i].quanity\n        }\n\n        let price= totalQuanity * 10;\n        let tax= price * 0.065;\n        let taxes= tax.toFixed(2)\n        let total= (price + tax).toFixed(2);\n\n        const displayItems= this.props.cart.map(item =>{\n\n            let totalPrice= item.quanity * item.price;\n                return (\n                    <tr key={item.id}>\n                            <td><img src={item.image} alt='product' height='100px'/></td>\n                            <td>{item.name}</td>\n                            <td>{item.type}</td>\n                            <td>{item.quanity}</td>\n                            <td>${totalPrice}</td>\n                            <td>\n                                 <i class=\"fa fa-minus-circle fa-2x mr-2\" onClick={() => this.props.onClick(item)}></i>\n                                <i className=\"fa fa-plus-circle fa-2x\" onClick={() => this.props.handleClick(item)} />                       \n                            </td>\n                    </tr>\n                )\n            })\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className= \"col text-center\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>Product Name</th>\n                                <th>Product Type</th>\n                                <th>Quanity</th>\n                                <th>Price</th>\n                                <th>Adjust</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {displayItems}\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <th>Subtotal</th>\n                                <th>{price}</th>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <th>Taxes</th>\n                                <th>{taxes}</th>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <th>Total</th>\n                                <th>{total}</th>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td><Link to='./checkout'><Button>Continue to Checkout</Button></Link></td>\n                            </tr>\n                        </tfoot>\n                    </Table>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}  \n\n\n\nclass ShoppingCart extends Component {\n\n    render() {\n        if (this.props.cart.length >= 1){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col text-center mt-3\">\n                        <h2>Your Shopping Cart</h2>\n                        <RenderCartItems cart={this.props.cart} onClick={this.props.onClick} handleClick={this.props.handleClick} />\n                    </div>\n                </div>\n            </div>\n        )\n        } else {\n            return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2>Your Shopping Cart</h2>\n                        <p><em>Your cart is empty. How about you go shopping?</em></p>   \n                        <img src='/assets/images/kra7.jpg' alt='leaf' className=\"m-3\" />\n                    </div>\n                </div>\n            </div>\n            )\n        }\n    }\n}\n\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\nimport { Form, FormGroup, Input, Label, Button, FormFeedback } from 'reactstrap'\nimport { Link }  from 'react-router-dom';\n\nclass Checkout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      billingFirstName: '',\n      billingLastName: '',\n      billingPhoneNum: '',\n      billingEmail: '',\n      billingAddress: '',\n      billingCity: '',\n      billingState: '',\n      billingZipCode: '',\n      shippingFirstName: '',\n      shippingLastName: '',\n      shippingAddress: '',\n      shippingCity: '',\n      shippingState: '',\n      shippingZipCode: '',\n      paymentName: '',\n      paymentNum: '',\n      ccExpiration: '',\n      ccCVV: '',\n      touched: {\n        billingFirstName: false,\n        billingLastName: false,\n        billingPhoneNum: false,\n        billingEmail: false,\n        billingAddress: false,\n        billingCity: false,\n        billingState: false,\n        billingZipCode: false,\n        shippingFirstName: false,\n        shippingLastName: false,\n        shippingAddress: false,\n        shippingCity: false,\n        shippingState: false,\n        shippingZipCode: false,\n        paymentName: false,\n        paymentNum: false,\n        ccExpiration: false,\n        ccCVV: false\n      }\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCheckboxChange= this.handleCheckboxChange.bind(this);\n  }\n  \n  handleCheckboxChange = () => {\n    this.setState({\n        shippingFirstName: this.state.billingFirstName,\n        shippingLastName: this.state.billingLastName,\n        shippingAddress: this.state.billingAddress,\n        shippingCity: this.state.billingCity,\n        shippingState: this.state.billingState,\n        shippingZipCode: this.state.billingZipCode\n    })\n  };\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  validate(billingFirstName,\n    billingLastName,\n    billingPhoneNum,\n    billingEmail,\n    billingAddress,\n    billingCity,\n    billingState,\n    billingZipCode,\n    shippingFirstName,\n    shippingLastName,\n    shippingAddress,\n    shippingCity,\n    shippingState,\n    shippingZipCode,\n    paymentName,\n    paymentNum,\n    ccExpiration,\n    ccCVV) {\n\n    const errors = {\n      billingFirstName: '',\n      billingLastName: '',\n      billingPhoneNum: '',\n      billingEmail: '',\n      billingAddress: '',\n      billingCity: '',\n      billingState: '',\n      billingZipCode: '',\n      shippingFirstName: '',\n      shippingLastName: '',\n      shippingAddress: '',\n      shippingCity: '',\n      shippingState: '',\n      shippingZipCode: '',\n      paymentName: '',\n      paymentNum: '',\n      ccExpiration: '',\n      ccCVV: ''\n    };\n\n    if (this.state.touched.billingFirstName) {\n      if (billingFirstName.length < 1) {\n        errors.billingFirstName = 'Please enter your first name.';\n      }\n    }\n\n    if (this.state.touched.shippingFirstName) {\n      if (shippingFirstName.length < 1) {\n        errors.shippingFirstName = 'Please enter your first name.';\n      }\n    }\n\n    if (this.state.touched.paymentName) {\n      if (paymentName.length < 1) {\n        errors.paymentName = 'Please enter your first name.';\n      }\n    }\n\n    if (this.state.touched.billingLastName) {\n      if (billingLastName.length < 1) {\n        errors.billingLastName = 'Please enter your last name.'\n      }\n    }\n\n    if (this.state.touched.shippingLastName) {\n      if (shippingLastName.length < 1) {\n        errors.shippingLastName = 'Please enter your last name.'\n      }\n    }\n\n    const reg = /^\\d+$/;\n\n    if (this.state.touched.ccExpiration) {\n      if (ccExpiration.length !== 4 || !reg.test(ccExpiration)) {\n        errors.ccExpiration = 'Card Expiration should only be 4 digits long'\n      }\n    }\n\n    if (this.state.touched.ccCVV) {\n      if (ccCVV.length !== 3 || !reg.test(ccCVV)) {\n        errors.ccCVV = 'CVV should be only three digits long'\n      }\n    }\n\n    if (this.state.touched.billingPhoneNum && billingPhoneNum.length < 10 && !reg.test(billingPhoneNum)) {\n      errors.billingPhoneNum = 'The phone number should contain ten numbers.';\n    }\n\n    if (this.state.touched.billingZipCode) {\n      if (billingZipCode.length < 5 || billingZipCode.length > 5 || !reg.test(billingZipCode)) {\n        errors.billingZipCode = 'Zip Code should only contain numbers and be five digits long.'\n      }\n    }\n\n    if (this.state.touched.paymentNum) {\n      if (paymentNum.length < 16 || paymentNum.length > 16 || !reg.test(paymentNum)) {\n        errors.paymentNum = 'Payment number should only contain numbers and be 16 digits long.'\n      }\n    }\n\n    if (this.state.touched.shippingZipCode) {\n      if (shippingZipCode.length !== 5 || !reg.test(shippingZipCode)) {\n        errors.shippingZipCode = 'Zip Code should only contain numbers and be five digits long'\n      }\n    }\n\n    if (this.state.touched.billingEmail && !billingEmail.includes('@')) {\n      errors.billingEmail = 'Email should contain a @';\n    }\n\n    if (this.state.touched.billingAddress) {\n      if (billingAddress.length < 3) {\n        errors.billingAddress = 'Please enter a valid address'\n      }\n    }\n\n    if (this.state.touched.shippingAddress) {\n      if (shippingAddress.length < 3) {\n        errors.shippingAddress = 'Please enter a valid address'\n      }\n    }\n\n    if (this.state.touched.billingCity) {\n      if (billingCity.length < 2) {\n        errors.billingCity = 'Please enter a valid city'\n      }\n    }\n\n    if (this.state.touched.shippingCity) {\n      if (shippingCity.length < 2) {\n        errors.shippingCity = 'Please enter a valid city'\n      }\n    }\n\n    if (this.state.touched.billingState) {\n      if (billingState.length !== 2) {\n        errors.billingState = 'Please use the abbrievated verison of the state you live in.'\n      }\n    }\n\n    if (this.state.touched.shippingState) {\n      if (shippingState.length !== 2) {\n        errors.shippingState = 'Please use the abbrievated verison of the state you live in.'\n      }\n    }\n\n    return errors;\n  }\n\n  handleBlur = (field) => () => {\n    this.setState({\n      touched: { ...this.state.touched, [field]: true }\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Current state is: ' + JSON.stringify(this.state));\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n   \n    const errors = this.validate(this.state.billingFirstName,\n      this.state.billingLastName,\n      this.state.billingPhoneNum,\n      this.state.billingEmail,\n      this.state.billingAddress,\n      this.state.billingCity,\n      this.state.billingState,\n      this.state.billingZipCode,\n      this.state.shippingFirstName,\n      this.state.shippingLastName,\n      this.state.shippingAddress,\n      this.state.shippingCity,\n      this.state.shippingState,\n      this.state.shippingZipCode,\n      this.state.paymentName,\n      this.state.paymentNum,\n      this.state.ccExpiration,\n      this.state.ccCVV\n    );\n    \n    let price = 0;\n    for (let i=0; i<this.props.cart.length; i++){\n      price += this.props.cart[i].quanity\n    }\n    price = price * 10;\n    let tax = price * 0.065;\n    let taxes = tax.toFixed(2)\n    let total = (price + tax).toFixed(2);\n\n    const displayItems = this.props.cart.map(item => {\n      return (\n        <li key={item.id} className=\"list-group-item d-flex justify-content-between\">\n          <div className=\"my-0\">\n            <h6>{item.name}</h6>\n            <small className=\"muted\">{item.type}  Qty:{item.quanity}</small>\n          </div>\n          <span className=\"muted\">${item.quanity * 10}</span>\n        </li>\n      )\n    })\n    \n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col text-center my-2\">\n            <i className=\"fa fa-leaf fa-4x mt-1\"></i>\n            <h2> Apna Botanicals Checkout</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-8\">\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup className=\"row\">\n                <div className=\"col-8 mb-1\">\n                  <h4>Billing Address</h4>\n                </div>\n                <div className=\"col-12 col-md-6\">\n                  <Label htmlFor=\"billingFirstName\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"billingFirstName\"\n                    name=\"billingFirstName\"\n                    placeholder=\"First Name\"\n                    value={this.state.billingFirstName}\n                    invalid={errors.billingFirstName}\n                    onBlur={this.handleBlur(\"billingFirstName\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.billingFirstName}</FormFeedback>\n                </div>\n                <div className=\"col\">\n                  <Label htmlFor=\"billingLastName\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"billingLastName\"\n                    name=\"billingLastName\"\n                    placeholder=\"Last Name\"\n                    value={this.state.billingLastName}\n                    invalid={errors.billingLastName}\n                    onBlur={this.handleBlur(\"billingLastName\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.billingLastName}</FormFeedback>\n                </div>\n              </FormGroup>\n              <FormGroup className=\"row\">\n                <div className=\"col-12 col-md-6\">\n                  <Label htmlFor=\"billingEmail\">Email</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"billingEmail\"\n                    name=\"billingEmail\"\n                    placeholder=\"Email\"\n                    value={this.state.billingEmail}\n                    invalid={errors.billingEmail}\n                    onBlur={this.handleBlur(\"billingEmail\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.billingEmail}</FormFeedback>\n                </div>\n                <div className=\"col\">\n                  <Label htmlFor=\"billingPhoneNum\">Phone Number</Label>\n                  <Input\n                    type=\"tel\"\n                    id=\"billingPhoneNum\"\n                    name=\"billingPhoneNum\"\n                    placeholder=\"Phone Number\"\n                    value={this.state.billingPhoneNum}\n                    invalid={errors.billingPhoneNum}\n                    onBlur={this.handleBlur(\"billingPhoneNum\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.billingPhoneNum}</FormFeedback>\n                </div>\n              </FormGroup>\n              <FormGroup className=\"row\">\n                <div className=\"col-12\">\n                  <Label htmlFor=\"billingAddress\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"billingAddress\"\n                    name=\"billingAddress\"\n                    placeholder=\"Street Address\"\n                    value={this.state.billingAddress}\n                    invalid={errors.billingAddress}\n                    onBlur={this.handleBlur(\"billingAddress\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.billingAddress}</FormFeedback>\n                </div>\n              </FormGroup>\n              <FormGroup className=\"row\">\n                <div className=\"col-12 col-md-4\">\n                  <Label htmlFor=\"billingCity\">City</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"billingCity\"\n                    name=\"billingCity\"\n                    placeholder=\"City\"\n                    value={this.state.billingCity}\n                    invalid={errors.billingCity}\n                    onBlur={this.handleBlur(\"billingCity\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.billingCity}</FormFeedback>\n                </div>\n                <div className=\"col\">\n                  <Label htmlFor=\"billingState\">State</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"billingState\"\n                    name=\"billingState\"\n                    placeholder=\"State\"\n                    value={this.state.billingState}\n                    invalid={errors.billingState}\n                    onBlur={this.handleBlur(\"billingState\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.billingState}</FormFeedback>\n                </div>\n                <div className=\"col\">\n                  <Label htmlFor=\"billingZipCode\">Zip Code</Label>\n                  <Input\n                    type=\"tel\"\n                    id=\"billingZipCode\"\n                    name=\"billingZipCode\"\n                    placeholder=\"Zip Code\"\n                    value={this.state.billingZipCode}\n                    invalid={errors.billingZipCode}\n                    onBlur={this.handleBlur(\"billingZipCode\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.billingZipCode}</FormFeedback>\n                </div>\n              </FormGroup>\n              <hr />\n              <h4 className=\"mt-2\">Shipping Address</h4>\n              <FormGroup check>\n                <Input \n                  type=\"checkbox\" \n                  value=\"shippingSameAsBilling\" \n                  id=\"shippingSameAsBilling\" \n                  onChange={this.handleCheckboxChange}\n                />\n                <Label check for=\"shippingSameAsBilling\"> Shipping Address Same as Billing</Label>\n              </FormGroup>\n              <FormGroup className=\"row mt-3\">\n                <div className=\"col-12 col-md-6\">\n                  <Label htmlFor=\"shippingFirstName\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"shippingFirstName\"\n                    name=\"shippingFirstName\"\n                    placeholder=\"First Name\"\n                    value={this.state.shippingFirstName}\n                    invalid={errors.shippingFirstName}\n                    onBlur={this.handleBlur(\"shippingFirstName\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.shippingFirstName}</FormFeedback>\n                </div>\n                <div className=\"col\">\n                  <Label htmlFor=\"shippingLasName\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"shippingLastName\"\n                    name=\"shippingLastName\"\n                    placeholder=\"Last Name\"\n                    value={this.state.shippingLastName}\n                    invalid={errors.shippingLastName}\n                    onBlur={this.handleBlur(\"shippingLastName\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.shippingLastName}</FormFeedback>\n                </div>\n              </FormGroup>\n              <FormGroup className=\"row\">\n                <div className=\"col-12\">\n                  <Label htmlFor=\"shippingAddress\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"shippingAddress\"\n                    name=\"shippingAddress\"\n                    placeholder=\"Street Address\"\n                    value={this.state.shippingAddress}\n                    invalid={errors.shippingAddress}\n                    onBlur={this.handleBlur(\"shippingAddress\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.shippingAddress}</FormFeedback>\n                </div>\n              </FormGroup>\n              <FormGroup className=\"row\">\n                <div className=\"col-12 col-md-4\">\n                  <Label htmlFor=\"shippingCity\">City</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"shippingCity\"\n                    name=\"shippingCity\"\n                    placeholder=\"City\"\n                    value={this.state.shippingCity}\n                    invalid={errors.shippingCity}\n                    onBlur={this.handleBlur(\"shippingCity\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.shippingCity}</FormFeedback>\n                </div>\n                <div className=\"col\">\n                  <Label htmlFor=\"shippingState\">State</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"shippingState\"\n                    name=\"shippingState\"\n                    placeholder=\"State\"\n                    value={this.state.shippingState}\n                    invalid={errors.shippingState}\n                    onBlur={this.handleBlur(\"shippingState\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.shippingState}</FormFeedback>\n                </div>\n                <div className=\"col\">\n                  <Label htmlFor=\"shippingZipCode\">Zip Code</Label>\n                  <Input\n                    type=\"tel\"\n                    id=\"shippingZipCode\"\n                    name=\"shippingZipCode\"\n                    placeholder=\"Zip Code\"\n                    value={this.state.shippingZipCode}\n                    invalid={errors.shippingZipCode}\n                    onBlur={this.handleBlur(\"shippingZipCode\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.shippingZipCode}</FormFeedback>\n                </div>\n              </FormGroup>\n              <hr />\n              <FormGroup tag=\"fieldset\">\n                <legend><h4>Payment Method</h4></legend>\n                <FormGroup check>\n                  <Label check>\n                    <Input type=\"radio\" name=\"radio1\" value=\"credit\" />{' '} Credit Card         \n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <Input type=\"radio\" name=\"radio1\" value=\"debit\" />{' '} Debit Card\n                  </Label>\n                </FormGroup>\n              </FormGroup>\n              <FormGroup className=\"row mt-3\">\n                <div className=\"col-12 col-md-6\">\n                  <Label htmlFor=\"paymentName\">Name on Card</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"paymentName\"\n                    name=\"paymentName\"\n                    value={this.state.paymentName}\n                    invalid={errors.paymentName}\n                    onBlur={this.handleBlur(\"paymentName\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <small class=\"text-muted\">Full name as displayed on card</small>\n                  <FormFeedback>{errors.paymentName}</FormFeedback>\n                </div>\n                <div className=\"col-12 col-md-6\">\n                  <Label htmlFor=\"paymentNum\">Card Number</Label>\n                  <Input\n                    type=\"tel\"\n                    id=\"paymentNum\"\n                    name=\"paymentNum\"\n                    value={this.state.paymentNum}\n                    invalid={errors.paymentNum}\n                    onBlur={this.handleBlur(\"paymentNum\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.paymentNum}</FormFeedback>\n                </div>\n              </FormGroup>\n              <FormGroup className=\"row\">\n                <div class=\"col-md-3\">\n                  <Label htmlFor=\"ccExpiration\">Expiration</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"ccExpiration\"\n                    name=\"ccExpiration\"\n                    value={this.state.ccExpiration}\n                    invalid={errors.ccExpiration}\n                    onBlur={this.handleBlur(\"ccExpiration\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.ccExpiration}</FormFeedback>\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                  <Label htmlFor=\"ccCV\">CVV</Label>\n                  <Input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"ccCVV\"\n                    name=\"ccCVV\"\n                    value={this.state.ccCVV}\n                    invalid={errors.ccCVV}\n                    onBlur={this.handleBlur(\"ccCVV\")}\n                    onChange={this.handleInputChange}\n                  />\n                  <FormFeedback>{errors.ccCVV}</FormFeedback>\n                </div>\n              </FormGroup>\n              <Link to='./submission'><Button className=\"btn btn-lg mb-3\" type=\"submit\" onClick={this.props.onClick}>Submit Order</Button></Link>\n            </Form>\n          </div>\n          <div className=\"col\">\n            <h4>Cart Items</h4>\n            <ul className='list-group mt-1'>\n              {displayItems}\n              <li className=\"list-group-item d-flex justify-content-lg-between\">\n                <div className=\"my-0\">\n                  <h6>Price</h6>\n                </div>\n                <span>${price}</span>\n              </li>\n              <li className=\"list-group-item d-flex justify-content-lg-between\">\n                <div className=\"my-0\">\n                  <h6>Taxes</h6>\n                </div>\n                <span>${taxes}</span>\n              </li>\n              <li className=\"list-group-item d-flex justify-content-lg-between\">\n                <div className=\"my-0\">\n                  <h6>Total</h6>\n                </div>\n                <span>${total}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default Checkout;\n","import React from 'react';\n\n\nfunction Submission () {\n    return(\n        <div className='container'>\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h2>Congrats!</h2>\n                    <p><em>We have receieved your order</em></p>\n                    <p>Your item will be shipped soon. When it does, you'll receive a notification \n                    email with tracking info.</p>\n                    <img src='/assets/images/Apna_logo.png' className=\"img-fluid\" alt='kratom' />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Submission;\n","import React from 'react';\n\nfunction Header() {\n    return (\n    <header className=\"cover\">\n       <div className=\"container\">\n           <div className=\"row\">\n               <div className=\"col text-center mt-5\">\n                    <img src='/assets/images/Apna_logo.png' alt=\"Apna Logo\" id=\"logo\"/>\n                    <h1 className=\"welcome mt-2\"><i>A better way to Kratom</i></h1>\n                    <i className=\"fa fa-leaf fa-4x mt-1\"></i>\n               </div>\n           </div>\n       </div>\n    </header>\n    )\n}\n\n\nexport default Header;","import React, {Component} from 'react';\nimport Header from './HeaderComponent'\nimport { Button, Card, CardTitle, CardImg, } from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\nfunction Kratom() {\n    return (\n        <div className=\"container kratomInfo mb-5\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5 text-center\">\n                    <img src='/assets/images/kratom6.jpg' className=\"img-fluid img1\" alt='kratom' />\n                </div>\n                <div className=\"col-12 col-md-7 mt-3\">\n                    <h2 id=\"kratom\">Kratom</h2>\n                    <p>A tropical tree in Southeast Asia. Its leaves have been used for hundreds of years to relieve pain. They can be eaten raw,\n            but more often they’re crushed and brewed as tea or turned into capsules, tablets, and liquids. <span className=\"green\">Health benefits</span> include\n            relieving pain, enhancing mood, increasing focus, more energy.</p>\n                    <a href='https://www.webmd.com/vitamins/ai/ingredientmono-1513/kratom' target='_blank' rel=\"noopener noreferrer\"><Button className=\"btn btn-lg btn-success\">Learn More</Button></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction Products (props){\n    const displayItems= props.display.map(item =>{\n        return (\n            <div key={item.id} className=\"col-9 col-md-4 mx-5 overlay\">\n                <h4 className=\"text-center\">{item.type}</h4>\n                <Card>\n                    <CardImg src={item.image} height='225px' className=\"image\" />\n                    <span className='middle'>\n                        <CardTitle className=\"text-center\"><Link to={item.link}><Button className=\"btn btn-lg\">Shop {item.type} </Button></Link></CardTitle>\n                    </span>\n                </Card>\n            </div>\n        )\n    })\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row justify-content-around\">\n                <div className=\"col text-center mb-1\">\n                    <h2>Our Products</h2>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                {displayItems}\n            </div>\n        </div>\n    )\n}\n\nfunction UserFaqs() {\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-4 text-center mt-auto\">\n                    <img src=\"/assets/images/hiclipart.com.png\" className=\"img-fluid\" style={{height:'250px'}} alt='confused guy'/>\n                </div>\n                <div className=\"col-8 mt-5\">\n                    <h2>New User Guide</h2>\n                    <p>Head over to our new user guide for some frequently asked questions. We want all of our customers to be informed\n                    before they buy which is why we made this. We information on the effects of kratom, how much to take, how to\n                    storage it, and serving tips.\n                    </p>\n                    <Link to='./guide'><Button className=\"btn btn-lg btn-success\">Click here</Button></Link>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col my-5\">\n                    <h2>Questions</h2>\n                    <p>We are here to help. Head over to our contact page and connect with us. As a local business, we strive to provide\n          the best strains available to our consumers so they keep coming back.</p>\n                    <Link to='./contactus'><Button className=\"btn btn-lg btn-success\">Contact Us</Button></Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass Home extends Component {\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n      }\n\n    render (){\n    return (\n        <div>\n            <Header />\n            <Kratom />\n            <Products display={this.props.display} />\n            <UserFaqs />\n        </div>\n    )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { Link }  from 'react-router-dom';\n\n\nfunction Footer(props) {\n    return (\n        <div className=\"container-fluid footer\">\n            <div className=\"row text-center d-flex justify-content-center pt-4 mb-1\">\n                <div className=\"col-md-2 mb-1\">\n                    <h6 className=\"text-uppercase font-weight-bold\">\n                        <Link to='/home'>Home</Link>\n                    </h6>\n                </div>\n                <div className=\"col-md-2 mb-1\">\n                    <h6 className=\"text-uppercase font-weight-bold\">\n                        <Link to='/about'>About Us</Link>\n                    </h6>\n                </div>\n                <div className=\"col-md-2 mb-1\">\n                    <h6 className=\"text-uppercase font-weight-bold\">\n                        <Link to=\"/guide\">FAQS</Link>\n                    </h6>\n                </div>\n                <div className=\"col-md-2 mb-1\">\n                    <h6 className=\"text-uppercase font-weight-bold\">\n                        <Link to=\"/contactus\">Contact</Link>\n                    </h6>\n                </div> \n         </div>\n        <hr className=\"rgba-white-light\"/>\n        <div className=\"row d-flex text-center justify-content-center mb-md-0 mb-1\">\n            <div className=\"col-12 col-md-3\">\n                <p className=\"mt-1\">2175 Terra Street, Seattle WA 98161</p>\n            </div>\n            <div className=\"col-12 col-md-3 pt-1\">\n                <a href=\"tel:+1-541-337-5664\"><i className=\"fa fa-phone\"></i>\n                1-541-337-5664</a>\n            </div>\n            <div className=\"col-12 col-md-3 pt-1\">\n                <a href=\"mailto:apnabotanicals@gmail.com\"><i className=\"fa fa-envelope-o\"></i>\n                apnabotanicals@gmail.com</a>\n            </div>\n        </div>\n         <hr className=\"clearfix d-md-none rgba-white-light\" />\n        <div className=\"row pb-3\">\n          <div className=\"col-md-12 text-center\">\n                <div className=\"mb-2 flex-center\">\n                    <a href='facebook.com'><i className=\"fa fa-facebook-f fa-lg white-text mr-4\"> </i></a>\n                    <a href='twitter.com'><i className=\"fa fa-twitter fa-lg white-text mr-4\"> </i></a>\n                     <a href='instagram.com'><i className=\"fa fa-instagram fa-lg white-text mr-4\"> </i></a>\n                     <a href='youtube.com'><i className=\"fa fa-youtube\"></i></a>\n                </div>\n            </div>\n         </div>\n    </div>\n    )\n}\n\n\nexport default Footer;","const Types = {\n    ADD_ITEM: 'ADD_ITEM',\n    DELETE_ITEM: 'DELETE_ITEM',\n    RESET_CART: 'RESET_CART'\n};\n\nconst addItem = item => ({\n    type: Types.ADD_ITEM,\n    payload: item\n})\n\nconst deleteItem= item => ({\n    type: Types.DELETE_ITEM,\n    payload: item\n})\n\nconst resetCart= () => ({\n    type: Types.RESET_CART\n})\n\nexport default {addItem, deleteItem, resetCart, Types};\n\n","import React, { Component } from 'react';\nimport DisplayNavbar from './DisplayNavbar'\nimport DisplayCards from './DisplayCards'\nimport DisplayPowders from './DisplayPowders'\nimport AboutUs from './AboutUs';\nimport ContactUs from './ContactUs';\nimport NewUserGuide from './faqs';\nimport ShoppingCart from './ShoppingCart'\nimport Checkout from './checkout';\nimport Submission from './Submission';\nimport Home from './HomeComponent'\nimport Footer from './DisplayFooter';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport ACTIONS from '../Redux/actions'\n\nconst mapStateToProps= state => {\n    return {\n        display: state.display,\n        powders: state.powders,\n        products: state.capsules,\n        cart: state.cart\n    }\n}\n\nconst mapDispatchToProps= dispatch => ({\n    addItem: item => dispatch(ACTIONS.addItem(item)),\n    deleteItem: item => dispatch(ACTIONS.deleteItem(item)),\n    resetCart: () => dispatch(ACTIONS.resetCart())\n})\n\nclass Main extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.handleClick = this.handleClick.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    handleClick(item) {\n        this.props.addItem(item)\n    }\n\n    handleDelete(item) {\n        this.props.deleteItem(item)\n    }\n\n    handleReset(){\n        this.props.resetCart()\n    }\n    \n    render() {\n        return (\n            <div>\n                <DisplayNavbar cart={this.props.cart} />\n                <Switch>\n                    <Route path='/home'>\n                        <Home display={this.props.display} />\n                    </Route>\n                    <Route exact path='/directory'>\n                        <DisplayCards products={this.props.products} onClick={this.handleClick} />\n                    </Route>\n                    <Route exact path='/powders'>\n                        <DisplayPowders powders={this.props.powders} onClick={this.handleClick} />\n                    </Route>\n                    <Route exact path='/about'>\n                        <AboutUs />\n                    </Route>\n                    <Route exact path='/guide'>\n                        <NewUserGuide />\n                    </Route>\n                    <Route exact path='/contactus'>\n                        <ContactUs />\n                    </Route>\n                    <Route exact path='/shoppingcart'>\n                        <ShoppingCart \n                            cart={this.props.cart} \n                            onClick={this.handleDelete}\n                            handleClick={this.handleClick}\n                        />\n                    </Route>\n                    <Route exact path='/checkout'>\n                        <Checkout cart={this.props.cart} onClick={this.handleReset} />\n                    </Route>\n                    <Route exact path='/submission'>\n                        <Submission />\n                    </Route>\n                    <Redirect to='/home' />\n                </Switch>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))","import {DISPLAY} from '../shared/productDisplay';\nimport { POWDERS } from '../shared/powders';\nimport {CAPSULES} from '../shared/products';\nimport ACTIONS from './actions';\n\nexport const initialState = {\n    display: DISPLAY,\n    powders: POWDERS,\n    capsules: CAPSULES,\n    cart: []\n}\n\nexport const Reducer = (state= initialState, action) => {\n\n    switch(action.type){\n\n        case ACTIONS.Types.ADD_ITEM: {\n\n            let item= action.payload;\n            //checks to see if item is already in cart\n            if (state.cart.includes(item)){\n\n                item.quanity+=1;\n                return{\n                    ...state,\n                    cart:[...state.cart]\n                }\n            } else {\n            //adds item to cart if not there already \n            let newCart = [...state.cart]\n            item.key = newCart.length;\n            newCart.push(item)\n            return {\n                ...state,\n                cart:newCart\n                }\n            }\n        }\n\n        case ACTIONS.Types.DELETE_ITEM: {\n            //deletes item from cart\n            let item = action.payload;\n\n            if (item.quanity > 1){\n                item.quanity-=1;\n                return {\n                    ...state,\n                    cart: [...state.cart]\n                }\n            } else {\n                let newCart = [...state.cart]\n                let index = newCart.indexOf(item)\n                newCart.splice(index, 1)\n\n                return {\n                    ...state,\n                    cart:newCart\n                }\n            }\n        }\n        case ACTIONS.Types.RESET_CART: {\n            let newCart = [ ];\n            return {\n                ...state,\n                cart: newCart\n            }\n        }\n        default: return state\n    }\n    \n}\n\n","export const DISPLAY=[\n    {\n        id:0,\n        type: 'Capusles',\n        image: 'assets/images/closeUp.jpg',\n        link: '/directory'\n    },\n    {\n        id: 1,\n        type: 'Powders',\n        image: 'assets/images/kratom4.jpg',\n        link: '/powders'\n    }\n]\n\n","export const POWDERS= [\n    {\n        id: 0,\n        name: 'Kratom Gold',\n        type: 'Powder',\n        image: 'assets/images/gold-p.png',\n        description: 'Calming and Soothing',\n        price: 10,\n        quanity:1\n    },\n    {\n        id: 1,\n        name: 'Kratom Green',\n        type: 'Powder',\n        image: 'assets/images/green-p.png',\n        description: 'Energy driven, focusing',\n        price: 10,\n        quanity:1\n    },\n    {\n        id: 2,\n        name: 'Kratom Red',\n        type: 'Powder',\n        image: 'assets/images/red-p.png',\n        description: 'Fast and Furious',\n        price: 10,\n        quanity:1\n    },\n    {\n        id: 3,\n        name: 'Kratom White',\n        type: 'Powder',\n        image: 'assets/images/white-p.png',\n        description: 'Attentive and alert',\n        price: 10,\n        quanity:1\n    },\n    {\n        id: 4,\n        name: 'Kratom Yellow',\n        type: 'Powder',\n        image: 'assets/images/yellow-p.png',\n        description: 'Focus and alert',\n        price: 10,\n        quanity:1\n    }\n  ]","export const CAPSULES= [\n    {\n        id: 5,\n        name: 'Kratom Gold',\n        type: 'Capsule',\n        image: 'assets/images/gold-c.png',\n        description: 'Calming and Soothing',\n        price: 10,\n        quanity:1\n    },\n    {\n        id: 6,\n        name: 'Kratom Green',\n        type: 'Capsule',\n        image: 'assets/images/green-c.png',\n        description: 'Energy driven, focusing',\n        price: 10,\n        quanity:1\n    },\n    {\n        id: 7,\n        name: 'Kratom Red',\n        type: 'Capsule',\n        image: 'assets/images/red-c.png',\n        description: 'Fast and Furious',\n        price: 10,\n        quanity:1\n    },\n    {\n        id: 8,\n        name: 'Kratom White',\n        type: 'Capsule',\n        image: 'assets/images/red-c.png',\n        description: 'Attentive and alert',\n        price: 10,\n        quanity:1\n    },\n    {\n        id: 9,\n        name: 'Kratom Yellow',\n        type: 'Capsule',\n        image: 'assets/images/red-c.png',\n        description: 'Focus and alert',\n        price: 10,\n        quanity:1\n    }\n  ]\n","import React from 'react';\nimport './App.css';\nimport Main from './Components/MainComponent'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './Redux/configureStore';\n\nexport default function Routes(){\n  const store = ConfigureStore();\n    return (\n      <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div id=\"root\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n\n\n","import { createStore } from 'redux';\nimport {Reducer, initialState } from './reducer'\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        Reducer, \n        initialState\n    )\n    return store;\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.css';\nimport 'typeface-poppins';\nimport Routes from './App';\n\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}